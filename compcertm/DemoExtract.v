Require Import DemoHeader DemoTarget.

Extract Inductive list => "list" [ "[]" "(::)" ].
Extract Inlined Constant Datatypes.fst => "fst".
Extract Inlined Constant Datatypes.snd => "snd".
Extract Inductive prod => "(*)"  [ "(,)" ].
(* Recursive Extraction utof_program. *)
Extraction lb0.
Extraction code.
Extraction func.
Extraction func_id.
Extraction main_id.
Extraction prog.
(****************************** ORIGINAL *****************************************)
(* // Conversion unsigned long -> double-precision float *)
(* FUNCTION(__compcert_i64_utod) *)
(*         testq   %rdi, %rdi *)
(*         js      1f *)
(*         pxor    %xmm0, %xmm0            // if < 2^63, *)
(*         cvtsi2sdq %rdi, %xmm0           // convert as if signed *)
(*         ret *)
(* 1:                                      // if >= 2^63, use round-to-odd trick *)
(*         movq    %rdi, %rax *)
(*         shrq    %rax *)
(*         andq    $1, %rdi *)
(*         orq     %rdi, %rax              // (arg >> 1) | (arg & 1) *)
(*         pxor    %xmm0, %xmm0 *)
(*         cvtsi2sdq %rax, %xmm0           // convert as if signed *)
(*         addsd   %xmm0, %xmm0            // multiply result by 2.0 *)
(*         ret *)
(* ENDFUNCTION(__compcert_i64_utod)        *)
(****************************** FROM COQ *****************************************)
(* # File generated by CompCert 3.4 *)
(* # Command line: *)
(*         .text *)
(*         .align  16 *)
(*         .globl $54 *)
(* $54: *)
(*         .cfi_startproc *)
(*         testq   %rdi, %rdi *)
(*         js      .L100 *)
(*         xorpd   %xmm0, %xmm0 *)
(*         cvtsi2sdq %rdi, %xmm0 *)
(*         ret *)
(* .L100: *)
(*         movq    %rdi, %rax *)
(*         shrq    $1, %rax *)
(*         andq    $1, %rdi *)
(*         orq     %rdi, %rax *)
(*         xorpd   %xmm0, %xmm0 *)
(*         cvtsi2sdq %rax, %xmm0 *)
(*         addsd   %xmm0, %xmm0 *)
(*         ret *)
(*         .cfi_endproc *)
(*         .type   $54, @function *)
(*         .size   $54, . - $54 *)